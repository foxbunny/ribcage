// Generated by CoffeeScript 1.6.3
/*!
@author Branko Vukelic <branko@brankovukelic.com>
@license MIT
*/

var _this = this;

if (typeof define !== 'function' || !define.amd) {
  this.define = function(factory) {
    var _base;
    (_base = (_this.ribcage || (_this.ribcage = {}))).utils || (_base.utils = {});
    return _this.ribcage.utils.LocalStorage = factory();
  };
}

define(function() {
  var LocalStorage;
  return LocalStorage = (function() {
    function LocalStorage(debug) {
      this.debug = debug != null ? debug : false;
      this.hasNative = 'localStorage' in window;
      if (this.hasNative) {
        this.localStorage = window.localStorage;
      } else {
        this.localStorage = (function() {
          var store;
          store = {};
          return {
            getItem: function(key) {
              return store[key];
            },
            setItem: function(key, value) {
              return store[key] = value;
            },
            removeItem: function(key) {
              if (store[key] != null) {
                return del(store[key]);
              }
            }
          };
        })();
      }
    }

    LocalStorage.prototype.getItem = function(key, raw) {
      var e, val;
      if (raw == null) {
        raw = false;
      }
      val = this.localStorage.getItem(key);
      if (raw) {
        return val;
      }
      try {
        return JSON.parse(val);
      } catch (_error) {
        e = _error;
        return null;
      }
    };

    LocalStorage.prototype.setItem = function(key, val, raw) {
      if (raw == null) {
        raw = false;
      }
      val = raw ? val : JSON.stringify(val);
      return this.localStorage.setItem(key, val);
    };

    LocalStorage.prototype.removeItem = function(key) {
      this.localStorage.removeItem(key);
      return true;
    };

    return LocalStorage;

  })();
});
