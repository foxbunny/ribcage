# <a name="redirect-view">Redirect View</a>

This view simply redirects to another location and provides hooks for executing
code while doing so.

This module is in UMD format and creates `ribcage.views.redirectView`,
`ribcage.views.RedirectView` and `ribcage.viewMixins.RedirectView` globals if
not used with an AMD loader such as RequireJS.

This module depends on `ribcage.views.BaseView`

 + [`redirectViewMixin`](#redirectviewmixin)
   - [`#redirectPath`](#redirectpath)
   - [`#getRedirectPath()`](#getredirectpath)
   - [`#beforeRedirect()`](#beforeredirect)
   - [`#redirect()`](#redirect)
   - [`redirectViewMixin,render()`](#redirectviewmixin-render)
 + [`RedirectView`](#redirectview)


## <a name="redirectviewmixin">`redirectViewMixin`</a>

This mixin implements the API for the `RedirectView`.

### <a name="redirectpath">`#redirectPath`</a>

The redirect path. Default value is an empty string, which will cause a
redirect to '#' fragment identifier.

### <a name="getredirectpath">`#getRedirectPath()`</a>

Returns the path to which view will redirect. By default, it returns the value
of [`#redirectPath`](#redirectpath).

### <a name="beforeredirect">`#beforeRedirect()`</a>

Called before the redirect is performed. Has no arguments and return value is
not used.

### <a name="redirect">`#redirect()`</a>

Performs the actual redirect. By default, it simply assigns to
`window.location.hash`.

### <a name="redirectviewmixin-render">`redirectViewMixin,render()`</a>

This overrides the default `#render()` method to immediately redirect.

## <a name="redirectview">`RedirectView`</a>

Please see the documentation for the [`redirectViewMixin`](#redirectviewmixin)
for more information on the API this view provides.