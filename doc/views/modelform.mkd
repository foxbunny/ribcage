# <a name="model-form-view">Model form view</a>

Extends the BaseFormView to add support for model handling. It updates the
model automatically when form is updated, and also validates the model using
the model's own `#validate()` method.

This module is in UMD format and it will create `ribcage.views.modelFormView`,
`ribcage.views.ModelFormView`, and `ribcage.viewMixins.modelFormViewMixin`
globals if not used with an AMD loader such as RequireJS.

This module depends on jQuery, Underscore, and `ribcage.views.BaseFormView`.

 + [`modelFormViewMixin`](#modelformviewmixin)
   - [`#validate()`](#validate)
   - [`#events`](#events)
   - [`#inputChange(e)`](#inputchange-e)
   - [`#updateModel(e)`](#updatemodel-e)
 + [`ModelFormView`](#modelformview)


## <a name="modelformviewmixin">`modelFormViewMixin`</a>

This mixin implements the API for the `ModelFormView` view.

### <a name="validate">`#validate()`</a>

Validates the model.

The model's validate method should return an error object that conforms to the
`BaseFormView`'s error object format.

The method should return and array in `[errorObject, data]` format.

### <a name="events">`#events`</a>

Maps events to event handlers.

### <a name="inputchange-e">`#inputChange(e)`</a>

Wrapper function to call the change and input events handlers for form inputs
on both this model and the `BaseFormView`.

### <a name="updatemodel-e">`#updateModel(e)`</a>

Update the model by setting serialized form data.

## <a name="modelformview">`ModelFormView`</a>

Please see the documentation for the
[`modelFormViewMixin`](#modelformviewmixin) for more information on the API
that this view provides.