// Generated by CoffeeScript 1.6.1
/*!
@author Branko Vukelic <branko@brankovukelic.com>
@license MIT
*/

var _this = this;

if (typeof define !== 'function' || !define.amd) {
  this.require = function(dep) {
    return (function() {
      switch (dep) {
        case './base':
          return _this.ribcage.views.baseView;
        default:
          return null;
      }
    })() || (function() {
      throw new Error("Unmet dependency " + dep);
    })();
  };
  this.define = function(factory) {
    var _base, _base1;
    (_base = (_this.ribcage || (_this.ribcage = {}))).views || (_base.views = {});
    (_base1 = _this.ribcage).viewMixins || (_base1.viewMixins = {});
    _this.ribcage.views.redirectView = factory(_this.require);
    _this.ribcage.views.RedirectView = _this.ribcage.views.redirectView.View;
    return _this.ribcage.viewMixins.RedirectView = _this.ribcage.views.redirectView.mixin;
  };
}

define(function(require) {
  var RedirectView, baseView, redirectViewMixin;
  baseView = require('./base');
  redirectViewMixin = {
    redirectPath: '',
    getRedirectPath: function() {
      return this.redirectPath;
    },
    beforeRedirect: function() {
      return this;
    },
    redirect: function() {
      this.beforeRedirect();
      return window.location.hash = this.getRedirectPath();
    },
    render: function() {
      this.redirect();
      return this;
    }
  };
  RedirectView = Backbone.View.extend(redirectViewMixin);
  return {
    mixin: redirectViewMixin,
    View: RedirectView
  };
});
